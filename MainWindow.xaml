<Window x:Class="TemporalMotionExtractionAnalysis.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:TemporalMotionExtractionAnalysis.Converters"
        xmlns:local="clr-namespace:TemporalMotionExtractionAnalysis.ViewModel"
        xmlns:models="clr-namespace:TemporalMotionExtractionAnalysis.Model"
        mc:Ignorable="d"
        Title="Temporal Motion Analysis App" 
        Width="1400"
        Height="980"
        Background="Gray"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!-- Data Template Resources -->
        <DataTemplate x:Key="SecondItemTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding ImagePath}" Height="Auto" Width="350" Margin="30,2,0,0"
                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="DefaultTemplate">
            <StackPanel Orientation="Horizontal">
                <!-- Empty template for non-second items -->
            </StackPanel>
        </DataTemplate>
        
        <!-- Converter Resources -->
        <models:IndexBasedTemplateSelector x:Key="IndexBasedTemplateSelector"
                                  SecondItemTemplate="{StaticResource SecondItemTemplate}"
                                  DefaultTemplate="{StaticResource DefaultTemplate}"/>
        <converters:IndexConverter x:Key="IndexConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:FrameIndexVisibilityConverter x:Key="FrameIndexVisibilityConverter"/>
        <converters:FrameIndexTickVisibilityConverter x:Key="FrameIndexTickVisibilityConverter"/>
        <converters:SelectedFramesMultiValueConverter x:Key="SelectedFramesMultiValueConverter"/>
        <converters:StringToIntConverter x:Key="StringToIntConverter"/>
        <converters:RadioButtonConverter x:Key="RadioButtonConverter"/>
        <converters:StringToColorConverter x:Key="StringToColorConverter"/>
        <converters:GlyphConverter x:Key="GlyphConverter" />
    </Window.Resources>
    <Grid>
        <StackPanel Orientation="Horizontal">
            <!-- Parent Control Pane : Left -->
            <StackPanel Orientation="Vertical" Margin="5,5,0,0">

                <!-- Folder Loader Controls -->
                <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5,5,0,5" Width="250" Height="70">
                        <DockPanel Background="White">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Label Content="Folder Name: " FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Label Content="{Binding FolderName}" MaxWidth="300" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                                <Button Content="Browse" Command="{Binding LoadImagesCommand}" Width="100" Margin="5,8,10,0"/>
                            </StackPanel>

                        </DockPanel>
                    </Border>
                </StackPanel>

                <!-- Playback Controls Border with Label -->
                <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Height="130">
                    <DockPanel Background="White">
                        <TextBlock DockPanel.Dock="Top" Text="Playback Controls" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5">
                                <!-- Previous Button -->
                                <Button Command="{Binding PreviousCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE100;" />
                                </Button>
                                <!-- Play Button -->
                                <Button Command="{Binding PlayCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE102;" />
                                </Button>
                                <!-- Pause Button -->
                                <Button Command="{Binding PauseCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE103;" />
                                </Button>
                                <!-- Stop Button -->
                                <Button Command="{Binding StopCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE15B;" />
                                </Button>
                                <!-- Next Button -->
                                <Button Command="{Binding NextCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE101;" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Vertical" Margin="10,0, 10,5">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Playback Mode:" FontWeight="Bold"/>
                                    <CheckBox Content="Reverse Playback" IsChecked="{Binding IsReversePlayback}" VerticalAlignment="Bottom" Margin="5"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label FontWeight="Bold">FPS:</Label>
                                    <ComboBox x:Name="fps" Width="100" Margin="5" ItemsSource="{Binding FpsValue}" SelectedValue="{Binding SelectedFps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>

                    </DockPanel>
                </Border>

                <!-- Indication Frame Preview Pane -->
                <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="250" Height="238">
                    <DockPanel Background="White">
                        <TextBlock DockPanel.Dock="Top" Text="Indication Frame" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <!-- Animation of images in selected folder -->
                        <StackPanel Orientation="Vertical">
                            <Image Source="{Binding CurrentImage.ImagePath}" Height="Auto" Width="230" VerticalAlignment="Top" Margin="0,5,0,0"/>

                        </StackPanel>
                    </DockPanel>
                </Border>

                <!-- Foreground Visual Encoding Options Border with Label -->
                <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="250" Height="280">
                    <DockPanel Background="White">
                        <TextBlock DockPanel.Dock="Top" Text="Foreground Visual Encoding Options" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <StackPanel Orientation="Vertical" Margin="5,0">

                            <StackPanel Orientation="Vertical">
                                <!-- Radio Buttons for Pixel and Marks -->
                                <StackPanel Orientation="Horizontal">
                                    <DockPanel VerticalAlignment="Center" Margin="5">
                                        <Label DockPanel.Dock="Left" FontWeight="Bold">Select Mode:</Label>
                                        <RadioButton x:Name="ForePixelRadioButton" Content="Pixel" GroupName="ForeMode" Margin="5" IsChecked="{Binding IsForePixelModeSelected}" />
                                        <RadioButton x:Name="ForeMarksRadioButton" Content="Marks" GroupName="ForeMode" Margin="5" IsChecked="{Binding IsForeMarksModeSelected}" />
                                    </DockPanel>
                                </StackPanel>

                                <!-- Submenu for Composition Modes, visible only when Pixel is selected -->
                                <StackPanel Orientation="Vertical" Margin="5">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsForePixelModeSelected}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsForePixelModeSelected}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <StackPanel Orientation="Horizontal">
                                        <Label FontWeight="Bold">Composition Mode:</Label>
                                        <!-- TODO: convert to combobox -->
                                        <ComboBox x:Name="ForegroundCompositionModes" Width="100" Margin="5" ItemsSource="{Binding CompositionModes}" SelectedValue="{Binding SelectedForegroundCompositionModes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                            <!-- Submenu for Marks, visible only when Marks is selected -->
                            <StackPanel Orientation="Vertical" Margin="5">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsForeMarksModeSelected}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsForeMarksModeSelected}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Positive Difference: " />
                                        <RadioButton GroupName="PositiveGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding PositiveGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=△}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="△" Foreground="Green"/>
                                        </RadioButton>
                                        <RadioButton GroupName="PositiveGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding PositiveGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=▲}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="▲" Foreground="Green"/>
                                        </RadioButton>
                                        <RadioButton GroupName="PositiveGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding PositiveGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=◆}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="◆" Foreground="Green"/>
                                        </RadioButton>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Negative Difference: " />
                                        <RadioButton GroupName="NegativeGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NegativeGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=▽}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="▽" Foreground="Red"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NegativeGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NegativeGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=▼}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="▼" Foreground="Red"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NegativeGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NegativeGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=★}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="★" Foreground="Red"/>
                                        </RadioButton>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="No Difference: "/>
                                        <RadioButton GroupName="NoDifferenceGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NoDifferenceGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=■}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="■" Foreground="Blue"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NoDifferenceGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NoDifferenceGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=□}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="□" Foreground="Blue"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NoDifferenceGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NoDifferenceGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=●}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="●" Foreground="Blue"/>
                                        </RadioButton>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label FontWeight="Bold">Area Size:</Label>
                                        <TextBox Width="100" Margin="5" Text="{Binding AreaSize}" />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>
                    </DockPanel>
                </Border>

                <!-- Background Visual Encoding Options Border with Label -->
                <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="250" Height="160">
                    <DockPanel Background="White">
                        <TextBlock DockPanel.Dock="Top" Text="Background Visual Encoding Options" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <StackPanel Orientation="Vertical" Margin="5,0">

                            <StackPanel Orientation="Vertical">
                                <!-- Radio Buttons for Pixel and Marks -->
                                <StackPanel Orientation="Horizontal">
                                    <DockPanel VerticalAlignment="Center" Margin="5">
                                        <Label DockPanel.Dock="Left" FontWeight="Bold">Select Mode:</Label>
                                        <RadioButton x:Name="BackPixelRadioButton" Content="Pixel" GroupName="BackMode" Margin="5" IsChecked="{Binding IsBackPixelModeSelected}" />
                                        <RadioButton x:Name="BackMarksRadioButton" Content="Marks" GroupName="BackMode" Margin="5" IsChecked="{Binding IsBackMarksModeSelected}" />
                                    </DockPanel>
                                </StackPanel>

                                <!-- Submenu for Composition Modes, visible only when Pixel is selected -->
                                <StackPanel Orientation="Vertical" Margin="5">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsBackPixelModeSelected}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBackPixelModeSelected}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <Label FontWeight="Bold">Composition Mode:</Label>
                                    <!-- TODO: Add Combobox for Background Composition Mode Selections -->
                                    <ComboBox x:Name="BackgroundCompositionModes" Width="100" Margin="5" ItemsSource="{Binding CompositionModes}" SelectedValue="{Binding SelectedBackgroundCompositionModes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>

                            <!-- Submenu for Marks, visible only when Marks is selected -->
                            <StackPanel Orientation="Vertical" Margin="5">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsBackMarksModeSelected}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsBackMarksModeSelected}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <Label FontWeight="Bold" Content="Texture/Marks:"/>
                                <!-- TODO: Combobox for Background Marks/Texture Selections -->
                                <ComboBox x:Name="BackgroundMarksTextures" Width="100" Margin="5" ItemsSource="{Binding BackgroundMarksTextures}" SelectedValue="{Binding SelectedBackgroundMarksTextures, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                </Border>

            </StackPanel>

            <!-- Parent Control Pane : Center/Right -->
            <StackPanel Orientation="Vertical" Margin="0,5,0,0">
                <!-- Timeline Overview -->
                <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="1100" Height="70">
                    <DockPanel Background="White">
                        <TextBlock DockPanel.Dock="Top" Text="Timeline Overview" FontWeight="Bold" HorizontalAlignment="Center" Margin="5,5,5,0"/>

                        <ListBox ItemsSource="{Binding TimelineCells}" HorizontalAlignment="Stretch" Height="Auto" Visibility="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                 SelectionMode="Single" SelectionChanged="ListBox_SelectionChanged" BorderBrush="Transparent">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <!-- Empty triangle pointing down, visible if the cell is selected -->
                                        <TextBlock Text="▽" FontFamily="Segoe UI" FontSize="10" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsOffsetSelection}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Filled triangle pointing down, visible if the cell is the current frame -->
                                        <TextBlock Text="▼" FontFamily="Segoe UI" FontSize="10" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-5,0,-2">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Frame Number (if 0 or multiple of 6) -->
                                        <TextBlock Text="{Binding FrameNumber}" HorizontalAlignment="Center" Margin="0"
                            Visibility="{Binding FrameNumber, Converter={StaticResource FrameIndexVisibilityConverter}}"/>

                                        <!-- Additional TextBlock for tick marks in between multiples of 6 -->
                                        <TextBlock Text="|" HorizontalAlignment="Center" Margin="0"
                            Visibility="{Binding FrameNumber, Converter={StaticResource FrameIndexTickVisibilityConverter}}"/>

                                        <!-- Filled triangle pointing up, visible if the cell is the current frame -->
                                        <TextBlock Text="▲" FontFamily="Segoe UI" FontSize="10" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,-2,0,-5">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Empty triangle pointing up, visible if the cell is selected -->
                                        <TextBlock Text="△" FontFamily="Segoe UI" FontSize="10" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsOffsetSelection}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Border>

                <!-- Zoomed Timeline View -->
                <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="1100" Height="130">
                    <DockPanel Background="White">
                        <TextBlock DockPanel.Dock="Top" Text="Zoomed Timeline" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                        <ListBox ItemsSource="{Binding ZoommedTimelineCells}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="Transparent"
                 Visibility="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <!-- Image Display -->
                                        <Image Source="{Binding ImagePath}" Width="100" Height="Auto" Margin="0" HorizontalAlignment="Center"
                               VerticalAlignment="Top"/>

                                        <!-- Frame Number -->
                                        <TextBlock Text="{Binding FrameNumber}" HorizontalAlignment="Center" Margin="0"/>

                                        <!-- Filled triangle pointing up, visible if the cell is the current frame -->
                                        <TextBlock Text="▲" FontFamily="Segoe UI" FontSize="15" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,-2,0,-5">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Empty triangle pointing up, visible if the cell is the offset frame -->
                                        <TextBlock Text="△" FontFamily="Segoe UI" FontSize="15" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,-2,0,-5">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsOffsetSelection}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Border>
                
                <StackPanel Orientation="Horizontal">
                    <!-- Animation Frame -->
                    <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="545" Height="240">
                        <DockPanel Background="White">
                            <TextBlock DockPanel.Dock="Top" Text="Current Frame" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,3,5,15">

                                <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Label FontWeight="Bold" Content="Frame Index: "/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CurrentIndex, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                        <Label Content="Total Frames: " FontWeight="Bold"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.ImageCount, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </StackPanel>
                                </StackPanel>

                                <!-- Animation of images in selected folder -->
                                <Image Source="{Binding CurrentImage.ImagePath}" Height="Auto" Width="400" Margin="0"/>
                            </StackPanel>

                        </DockPanel>
                    </Border>
                    
                    <!-- Offset Frame -->
                    <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="545" Height="240">
                        <DockPanel Background="White">
                            <TextBlock DockPanel.Dock="Top" Text="Offset Frame" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                            <StackPanel Orientation="Horizontal">
                                <ItemsControl ItemsSource="{Binding SelectedFrames}" 
                                        ItemTemplateSelector="{StaticResource IndexBasedTemplateSelector}" Height="Auto" Width="400" Margin="0,0,0,0"/>

                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="10,0,0,0" Width="120">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                        <Label Content="Frame Offset:" FontWeight="Bold"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.OffsetValue, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="E-measure:" FontWeight="Bold"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CalculatedEmeasure, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="MAE:" FontWeight="Bold"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CalculatedMAE, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="SSIM:" FontWeight="Bold"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CalculatedSSIM, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </DockPanel>
                    </Border>
                </StackPanel>

                <!-- Current Frame Transforms-->
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical">
                        <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="200" Height="450">
                            <DockPanel Background="White">
                                <TextBlock DockPanel.Dock="Top" Text="Current Frame Transforms" FontWeight="Bold" HorizontalAlignment="Center" Margin="5,5,5,0"/>

                                <StackPanel Orientation="Vertical" Margin="5,5,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Reduce Noise:" FontWeight="Bold"/>
                                        <RadioButton Content="On" IsChecked="{Binding IsCurrentXORSelected, Mode=TwoWay}" VerticalAlignment="Center" GroupName="XORCurrentGroup" Margin="0,0,8,0"/>
                                        <RadioButton Content="Off" IsChecked="{Binding IsCurrentXORSelected, Converter={StaticResource InverseBooleanConverter}, Mode=TwoWay}" VerticalAlignment="Center" GroupName="XORCurrentGroup"/>
                                    </StackPanel>

                                    <!-- TODO: Transparency Slider -->
                                    <StackPanel>
                                        <TextBlock Text = "Transparency" Margin = "10" />
                                        <Slider x:Name = "CurrentFrameTransparency" Minimum = "0" Maximum = "100" TickFrequency = "2" 
                                            TickPlacement = "BottomRight" ValueChanged = "currentFrameTransparency_ValueChanged" Margin = "5">
                                            <Slider.Background>
                                                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                                                    <GradientStop Color = "DarkGray" Offset = "0" />
                                                    <GradientStop Color = "DarkGray" Offset = "1" />
                                                </LinearGradientBrush>
                                            </Slider.Background>
                                        </Slider>
                                        <TextBlock x:Name = "textBlock1" Margin = "10" Text = "Level: 0" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Tint Color:" FontWeight="Bold"/>
                                        <ComboBox x:Name="CurrentFrameSourceColor" Width="100" Margin="5" 
                                                  ItemsSource="{Binding SourceColors}" 
                                                  SelectedValue="{Binding SelectedSourceColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToColorConverter}}" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label FontWeight="Bold">Blur:</Label>
                                        <ComboBox Width="100" Margin="5,0,0,0" 
                                                  ItemsSource="{Binding BlurValue}" 
                                                  SelectedValue="{Binding SelectedCurrentBlurSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                    
                                    <!-- TODO: Preview of Image Transforms -->
                                </StackPanel>

                            </DockPanel>
                        </Border>
                    </StackPanel>

                    <!-- Composite View -->
                    <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="680" Height="450" HorizontalAlignment="Left">
                        <DockPanel Background="White">
                            <TextBlock DockPanel.Dock="Top" Text="Composite View" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <!-- Composite Image from the SelectedFrames -->
                                <Image Source="{Binding CompositedImage.ImagePath}" Height="Auto" Width="650" Margin="0,-10,0,0" HorizontalAlignment="Left"/>

                            </StackPanel>

                        </DockPanel>
                    </Border>

                    <!-- Offset Frame Transforms-->
                    <StackPanel Orientation="Vertical">
                        <Border BorderBrush="DarkGray" BorderThickness="1" Margin="5" Width="200" Height="450">
                            <DockPanel Background="White">
                                <TextBlock DockPanel.Dock="Top" Text="Offset Frame Transforms" FontWeight="Bold" HorizontalAlignment="Center" Margin="5,5,5,0"/>

                                <StackPanel Orientation="Vertical" Margin="5,5,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Reduce Noise:" FontWeight="Bold"/>
                                        <RadioButton Content="On" IsChecked="{Binding IsOffsetXORSelected, Mode=TwoWay}" VerticalAlignment="Center" GroupName="XOROffsetGroup" Margin="0,0,8,0"/>
                                        <RadioButton Content="Off" IsChecked="{Binding IsOffsetXORSelected, Converter={StaticResource InverseBooleanConverter}, Mode=TwoWay}" VerticalAlignment="Center" GroupName="XOROffsetGroup"/>
                                    </StackPanel>

                                    <!-- TODO: Transparency/Opacity/Alpha Slider -->
                                    <StackPanel>
                                        <TextBlock Text = "Transparency" Margin = "10" />
                                        <Slider x:Name = "OffsetFrameTransparency" Minimum = "0" Maximum = "100" TickFrequency = "2" 
                                        TickPlacement = "BottomRight" ValueChanged = "offsetFrameTransparency_ValueChanged" Margin = "5">
                                            <Slider.Background>
                                                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                                                    <GradientStop Color = "DarkGray" Offset = "0" />
                                                    <GradientStop Color = "DarkGray" Offset = "1" />
                                                </LinearGradientBrush>
                                            </Slider.Background>
                                        </Slider>
                                        <TextBlock x:Name = "textBlock2" Margin = "10" Text = "Level: 0" />
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Tint Color:" FontWeight="Bold"/>
                                            <ComboBox x:Name="OffsetFrameDestinationColor" Width="100" Margin="5" 
                                                      ItemsSource="{Binding DestinationColors}" 
                                                      SelectedValue="{Binding SelectedDestinationColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToColorConverter}}" >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </StackPanel>

                                        <!-- Current Blur Kernel Size Selection -->
                                        <StackPanel Orientation="Horizontal">
                                            <Label FontWeight="Bold">Blur:</Label>
                                            <ComboBox Width="100" Margin="5,0,0,0" ItemsSource="{Binding BlurValue}" SelectedValue="{Binding SelectedOffsetBlurSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </StackPanel>

                                        <!-- TODO: Preview of Image Transforms -->
                                    </StackPanel>
                                </StackPanel>
                            </DockPanel>
                        </Border>
                    </StackPanel>

                </StackPanel>
                
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
