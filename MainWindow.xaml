<Window x:Class="TemporalMotionExtractionAnalysis.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:TemporalMotionExtractionAnalysis.Converters"
        xmlns:local="clr-namespace:TemporalMotionExtractionAnalysis.ViewModel"
        xmlns:models="clr-namespace:TemporalMotionExtractionAnalysis.Model"
        mc:Ignorable="d"
        Title="Temporal Motion Analysis App" 
        Width="1120"
        Height="980"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!-- Data Template Resources -->
        <DataTemplate x:Key="SecondItemTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding ImagePath}" Height="Auto" Width="350" Margin="30,2,0,0"
                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="DefaultTemplate">
            <StackPanel Orientation="Horizontal">
                <!-- Empty template for non-second items -->
            </StackPanel>
        </DataTemplate>
        
        <!-- Converter Resources -->
        <models:IndexBasedTemplateSelector x:Key="IndexBasedTemplateSelector"
                                  SecondItemTemplate="{StaticResource SecondItemTemplate}"
                                  DefaultTemplate="{StaticResource DefaultTemplate}"/>
        <converters:IndexConverter x:Key="IndexConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:FrameIndexVisibilityConverter x:Key="FrameIndexVisibilityConverter"/>
        <converters:FrameIndexTickVisibilityConverter x:Key="FrameIndexTickVisibilityConverter"/>
        <converters:SelectedFramesMultiValueConverter x:Key="SelectedFramesMultiValueConverter"/>
        <converters:StringToIntConverter x:Key="StringToIntConverter"/>
        <converters:RadioButtonConverter x:Key="RadioButtonConverter"/>
        <converters:StringToColorConverter x:Key="StringToColorConverter"/>
        <converters:GlyphConverter x:Key="GlyphConverter" />
    </Window.Resources>
    <Grid>
        <StackPanel Orientation="Horizontal">
            <!-- Parent Control Pane : Left -->
            <StackPanel Orientation="Vertical">

                <!-- Folder Loader Controls -->
                <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Border BorderBrush="Black" BorderThickness="1" Margin="5,5,0,5" Width="250" Height="60">
                        <DockPanel>
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Label Content="Folder Name: " FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Label Content="{Binding FolderName}" MaxWidth="300" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                                <Button Content="Browse" Command="{Binding LoadImagesCommand}" Width="100" Margin="5,0,10,0"/>
                            </StackPanel>

                        </DockPanel>
                    </Border>
                </StackPanel>

                <!-- Playback Controls Border with Label -->
                <Border BorderBrush="Black" BorderThickness="1" Margin="5">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Text="Playback Controls" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5">
                                <!-- Previous Button -->
                                <Button Command="{Binding PreviousCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE100;" />
                                </Button>
                                <!-- Play Button -->
                                <Button Command="{Binding PlayCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE102;" />
                                </Button>
                                <!-- Pause Button -->
                                <Button Command="{Binding PauseCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE103;" />
                                </Button>
                                <!-- Stop Button -->
                                <Button Command="{Binding StopCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE15B;" />
                                </Button>
                                <!-- Next Button -->
                                <Button Command="{Binding NextCommand}" FontFamily="Segoe MDL2 Assets" FontSize="24" Margin="5,0"
                                        IsEnabled="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="&#xE101;" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Vertical" Margin="10,0, 10,5">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Playback Mode:" FontWeight="Bold"/>
                                    <CheckBox Content="Reverse Playback" IsChecked="{Binding IsReversePlayback}" VerticalAlignment="Bottom" Margin="5"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label FontWeight="Bold">FPS:</Label>
                                    <ComboBox x:Name="fps" Width="100" Margin="5" ItemsSource="{Binding FpsValue}" SelectedValue="{Binding SelectedFps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>

                    </DockPanel>
                </Border>

                <!-- Visual Encoding Options Border with Label -->
                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="250" Height="445">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Text="Visual Encoding Options" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <StackPanel Orientation="Vertical" Margin="5,0">
                            
                            <StackPanel Orientation="Vertical">
                                <!-- Radio Buttons for Pixel and Marks -->
                                <StackPanel Orientation="Horizontal">
                                    <DockPanel VerticalAlignment="Center" Margin="5">
                                        <Label DockPanel.Dock="Left" FontWeight="Bold">Select Mode:</Label>
                                        <RadioButton x:Name="PixelRadioButton" Content="Pixel" GroupName="Mode" Margin="5" IsChecked="{Binding IsPixelModeSelected}" />
                                        <RadioButton x:Name="MarksRadioButton" Content="Marks" GroupName="Mode" Margin="5" IsChecked="{Binding IsMarksModeSelected}" />
                                    </DockPanel>
                                </StackPanel>

                                <!-- Submenu for Composition Modes, visible only when Pixel is selected -->
                                <StackPanel Orientation="Vertical" Margin="5">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPixelModeSelected}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPixelModeSelected}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <Label FontWeight="Bold">Composition Modes:</Label>
                                    <RadioButton x:Name="SourceOver" Content="SourceOver" GroupName="CompositionMode" Margin="5" 
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.SourceOver}}"/>
                                    <RadioButton x:Name="DestinationOver" Content="DestinationOver" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.DestinationOver}}"/>
                                    <RadioButton x:Name="SourceIn" Content="SourceIn" GroupName="CompositionMode" Margin="5" 
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.SourceIn}}"/>
                                    <RadioButton x:Name="DestinationIn" Content="DestinationIn" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.DestinationIn}}"/>
                                    <RadioButton x:Name="SourceOut" Content="SourceOut" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.SourceOut}}"/>
                                    <RadioButton x:Name="DestinationOut" Content="DestinationOut" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.DestinationOut}}"/>
                                    <RadioButton x:Name="SourceAtop" Content="SourceAtop" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.SourceAtop}}"/>
                                    <RadioButton x:Name="DestinationAtop" Content="DestinationAtop" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.DestinationAtop}}"/>
                                    <RadioButton x:Name="Clear" Content="Clear" GroupName="CompositionMode" Margin="5"
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.Clear}}"/>
                                    <RadioButton x:Name="XOR" Content="XOR" GroupName="CompositionMode" Margin="5" 
                                                 IsChecked="{Binding SelectedCompositionMode, Converter={StaticResource RadioButtonConverter},
                                                 ConverterParameter={x:Static local:MainViewModel+CompositionMode.XOR}}"/>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Source Color:" FontWeight="Bold"/>
                                        <ComboBox x:Name="SourceColor" Width="100" Margin="5" ItemsSource="{Binding SourceColors}" SelectedValue="{Binding SelectedSourceColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToColorConverter}}" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Destination Color:" FontWeight="Bold"/>
                                        <ComboBox x:Name="DestinationColor" Width="100" Margin="5" ItemsSource="{Binding DestinationColors}" SelectedValue="{Binding SelectedDestinationColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToColorConverter}}" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                            <!-- Submenu for Marks, visible only when Marks is selected -->
                            <StackPanel Orientation="Vertical" Margin="5">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMarksModeSelected}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMarksModeSelected}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                
                                <StackPanel Orientation="Vertical">
                                    <Label FontWeight="Bold">Glyphs:</Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Positive Difference: " />
                                        <RadioButton GroupName="PositiveGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding PositiveGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=△}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="△" Foreground="Green"/>
                                        </RadioButton>
                                        <RadioButton GroupName="PositiveGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding PositiveGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=▲}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="▲" Foreground="Green"/>
                                        </RadioButton>
                                        <RadioButton GroupName="PositiveGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding PositiveGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=◆}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="◆" Foreground="Green"/>
                                        </RadioButton>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Negative Difference: " />
                                        <RadioButton GroupName="NegativeGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NegativeGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=▽}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="▽" Foreground="Red"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NegativeGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NegativeGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=▼}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="▼" Foreground="Red"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NegativeGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NegativeGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=★}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="★" Foreground="Red"/>
                                        </RadioButton>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="No Difference: "/>
                                        <RadioButton GroupName="NoDifferenceGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NoDifferenceGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=■}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="■" Foreground="Blue"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NoDifferenceGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NoDifferenceGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=□}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="□" Foreground="Blue"/>
                                        </RadioButton>
                                        <RadioButton GroupName="NoDifferenceGlyphOptions" Margin="5,0,0,0" 
                                                     IsChecked="{Binding NoDifferenceGlyph, Converter={StaticResource GlyphConverter}, ConverterParameter=●}">
                                            <TextBlock FontFamily="Segoe UI Symbol" Text="●" Foreground="Blue"/>
                                        </RadioButton>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label FontWeight="Bold">Area Size:</Label>
                                        <TextBox Width="100" Margin="5" Text="{Binding AreaSize}" />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label FontWeight="Bold">Blur:</Label>
                                <ComboBox Width="100" Margin="5,0,0,0" ItemsSource="{Binding BlurValue}" SelectedValue="{Binding SelectedBlurSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Visibility="Hidden">
                                <Label FontWeight="Bold">Offset:</Label>
                                <TextBox Width="100" Margin="5" Text="{Binding OffsetValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToIntConverter}}" />
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                </Border>

                <!-- Indication Frame Preview Pane -->
                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="250" Height="260">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Text="Indication Frame" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                        <!-- Animation of images in selected folder -->
                        <StackPanel Orientation="Vertical">
                            <Image Source="{Binding CurrentImage.ImagePath}" Height="Auto" Width="230" VerticalAlignment="Top" Margin="0,5,0,0"/>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Label FontWeight="Bold" Content="Frame Index: "/>
                                <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CurrentIndex, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                <Label Content="Total Frames: " FontWeight="Bold"/>
                                <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.ImageCount, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                </Border>
            </StackPanel>

            <!-- Parent Control Pane : Center/Right -->
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                    <!-- Offset Frame -->
                    <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="410" Height="240">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" Text="Offset Frame" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                            <ItemsControl ItemsSource="{Binding SelectedFrames}" 
                                          ItemTemplateSelector="{StaticResource IndexBasedTemplateSelector}"/>

                        </DockPanel>
                    </Border>

                    <!-- Animation Frame -->
                    <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="410" Height="240">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" Text="Animation Frame" FontWeight="Bold" HorizontalAlignment="Center" Margin="5,5,5,0"/>

                            <!-- Animation of images in selected folder -->
                            <Image Source="{Binding CurrentImage.ImagePath}" Height="Auto" Width="350" Margin="0,-5,0,0"/>
                        </DockPanel>
                    </Border>
                </StackPanel>

                <!-- Composite View -->
                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="830" Height="380" HorizontalAlignment="Left">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Text="Composite View" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <!-- Composite Image from the SelectedFrames -->
                            <Image Source="{Binding CompositedImage.ImagePath}" Height="Auto" Width="600" Margin="0,-10,0,0" HorizontalAlignment="Left"/>

                            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="15,0,0,0" Width="150">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                    <Label Content="Frame Offset:" FontWeight="Bold"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.OffsetValue, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label Content="E-measure:" FontWeight="Bold"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CalculatedEmeasure, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label Content="MAE:" FontWeight="Bold"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CalculatedMAE, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label Content="SSIM:" FontWeight="Bold"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.CalculatedSSIM, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        
                    </DockPanel>
                </Border>

                <!-- Timeline Overview -->
                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="830" Height="110">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Text="Timeline Overview" FontWeight="Bold" HorizontalAlignment="Center" Margin="5,5,5,0"/>

                        <ListBox ItemsSource="{Binding TimelineCells}" HorizontalAlignment="Stretch" Height="Auto" Visibility="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                                 SelectionMode="Single" SelectionChanged="ListBox_SelectionChanged" BorderBrush="Transparent">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <!-- Empty triangle pointing down, visible if the cell is selected -->
                                        <TextBlock Text="▽" FontFamily="Segoe UI" FontSize="12" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsOffsetSelection}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Filled triangle pointing down, visible if the cell is the current frame -->
                                        <TextBlock Text="▼" FontFamily="Segoe UI" FontSize="15" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-5,0,-2">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Frame Number (if 0 or multiple of 6) -->
                                        <TextBlock Text="{Binding FrameNumber}" HorizontalAlignment="Center" Margin="0"
                                            Visibility="{Binding FrameNumber, Converter={StaticResource FrameIndexVisibilityConverter}}"/>

                                        <!-- Additional TextBlock for tick marks in between multiples of 6 -->
                                        <TextBlock Text="|" HorizontalAlignment="Center" Margin="0"
                                            Visibility="{Binding FrameNumber, Converter={StaticResource FrameIndexTickVisibilityConverter}}"/>

                                        <!-- Filled triangle pointing up, visible if the cell is the current frame -->
                                        <TextBlock Text="▲" FontFamily="Segoe UI" FontSize="15" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,-2,0,-5">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- Empty triangle pointing up, visible if the cell is selected -->
                                        <TextBlock Text="△" FontFamily="Segoe UI" FontSize="12" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsOffsetSelection}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Border>

                <!-- Zoomed Timeline View -->
                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="830" Height="160">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Text="Zoomed Timeline" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                        <ListBox ItemsSource="{Binding ZoommedTimelineCells}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="Transparent"
                                 Visibility="{Binding IsImagesLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <!-- Image Display -->
                                        <Image Source="{Binding ImagePath}" Width="150" Height="Auto" Margin="0" HorizontalAlignment="Center"
                                               VerticalAlignment="Top"/>

                                        <!-- Frame Number -->
                                        <TextBlock Text="{Binding FrameNumber}" HorizontalAlignment="Center" Margin="0"/>

                                        <!-- Filled triangle pointing up, visible if the cell is the current frame -->
                                        <TextBlock Text="▲" FontFamily="Segoe UI" FontSize="15" FontWeight="ExtraBold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,-2,0,-5">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Border>

            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
